vector< vector< pair<int, int> > > adj;
vector<int> dis, p;

struct cmp {
	bool operator() (const int a, const int b) const {
		if(dis[a] != dis[b])
			return dis[a] < dis[b];
		return a < b;
	}
};
void dijkstra(int s) {
	dis[s] = 0; p[s] = s;
	set<int, cmp> st;
	st.insert(s);
	while(!st.empty()) {
		int u = *st.begin();
		st.erase(st.begin());
		for(pair<int, int> v : adj[u]) {
			if(dis[v.first] > dis[u] + v.second) {
				st.erase(v.first);
				dis[v.first] = dis[u] + v.second;
				p[v.first] = u;
				st.insert(v.first);
			}
		}
	}
}
vector<int> find_path(int u, int v) {
	vector<int> path;
	for(int t = v; t != u; t = p[t]) {
		path.push_back(t);
	}
	path.push_back(u);
	reverse(path.begin(), path.end());
	return path;
}
